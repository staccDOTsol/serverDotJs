"use strict";
/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.errorCodeBeet = exports.ErrorCode = void 0;
const beet = __importStar(require("@metaplex-foundation/beet"));
/**
 * @category enums
 * @category generated
 */
var ErrorCode;
(function (ErrorCode) {
    ErrorCode[ErrorCode["BadArtithmetic"] = 0] = "BadArtithmetic";
    ErrorCode[ErrorCode["InvalidAuthority"] = 1] = "InvalidAuthority";
    ErrorCode[ErrorCode["InsufficientShares"] = 2] = "InsufficientShares";
    ErrorCode[ErrorCode["SharesArentAtMax"] = 3] = "SharesArentAtMax";
    ErrorCode[ErrorCode["NewMintAccountRequired"] = 4] = "NewMintAccountRequired";
    ErrorCode[ErrorCode["MintAccountRequired"] = 5] = "MintAccountRequired";
    ErrorCode[ErrorCode["InvalidMembershipModel"] = 6] = "InvalidMembershipModel";
    ErrorCode[ErrorCode["InvalidMembershipVoucher"] = 7] = "InvalidMembershipVoucher";
    ErrorCode[ErrorCode["MintDoesNotMatch"] = 8] = "MintDoesNotMatch";
    ErrorCode[ErrorCode["InvalidHoldingAccount"] = 9] = "InvalidHoldingAccount";
    ErrorCode[ErrorCode["HoldingAccountMustBeAnATA"] = 10] = "HoldingAccountMustBeAnATA";
    ErrorCode[ErrorCode["DerivedKeyInvalid"] = 11] = "DerivedKeyInvalid";
    ErrorCode[ErrorCode["IncorrectOwner"] = 12] = "IncorrectOwner";
    ErrorCode[ErrorCode["WalletDoesNotOwnMembershipToken"] = 13] = "WalletDoesNotOwnMembershipToken";
    ErrorCode[ErrorCode["InvalidMetadata"] = 14] = "InvalidMetadata";
    ErrorCode[ErrorCode["NumericalOverflow"] = 15] = "NumericalOverflow";
    ErrorCode[ErrorCode["InsufficientBalanceToDistribute"] = 16] = "InsufficientBalanceToDistribute";
    ErrorCode[ErrorCode["InvalidFanoutForMint"] = 17] = "InvalidFanoutForMint";
    ErrorCode[ErrorCode["MustDistribute"] = 18] = "MustDistribute";
    ErrorCode[ErrorCode["InvalidStakeAta"] = 19] = "InvalidStakeAta";
    ErrorCode[ErrorCode["CannotTransferToSelf"] = 20] = "CannotTransferToSelf";
    ErrorCode[ErrorCode["TransferNotSupported"] = 21] = "TransferNotSupported";
    ErrorCode[ErrorCode["RemoveNotSupported"] = 22] = "RemoveNotSupported";
})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));
/**
 * @category userTypes
 * @category generated
 */
exports.errorCodeBeet = beet.fixedScalarEnum(ErrorCode);
//# sourceMappingURL=ErrorCode.js.map